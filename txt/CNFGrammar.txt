S0 -> SS SS  | IF ELSEIF  | IF ELSE  | IF D91  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91  | FORIN_HEADER K11  | FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81  | FOROF_HEADER K91  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | IMPORTS U61  | IMPORTS U71  | EXPORTS U91  | EXPORTS V11  | EXPORTS V21  | DIVIDEMUL D61  | DIVIDE D71  | VARIABLES A11  | VARIABLES A21  | VAR A31  | VAR A41  | VARIABLES A51  | VAR A61  | VARIABLES A71  | VAR A81  | VARIABLES A91  | VAR B11  | VARIABLES B21  | VAR B31  | VARIABLES B41  | VAR B51  | VAR B61  | VAR B71  | VARIABLES SEMICOLON  | TRY CATCH  | TRY FINALLY  | TRY Q41  | THROWS Q51  | THROWS Q61  | THROWS Q71  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | DELETES S31  | DELETES S41  | DELETES S51  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON 
SS -> SS SS  | IF ELSEIF  | IF ELSE  | IF D91  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91  | FORIN_HEADER K11  | FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81  | FOROF_HEADER K91  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | IMPORTS U61  | IMPORTS U71  | EXPORTS U91  | EXPORTS V11  | EXPORTS V21  | DIVIDEMUL D61  | DIVIDE D71  | VARIABLES A11  | VARIABLES A21  | VAR A31  | VAR A41  | VARIABLES A51  | VAR A61  | VARIABLES A71  | VAR A81  | VARIABLES A91  | VAR B11  | VARIABLES B21  | VAR B31  | VARIABLES B41  | VAR B51  | VAR B61  | VAR B71  | VARIABLES SEMICOLON  | TRY CATCH  | TRY FINALLY  | TRY Q41  | THROWS Q51  | THROWS Q61  | THROWS Q71  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | DELETES S31  | DELETES S41  | DELETES S51  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON 
A11 -> EQUAL A12 
A12 -> VARG SEMICOLON 
A21 -> OP A22 
A22 -> EQUAL A23 
A23 -> VARG SEMICOLON 
A31 -> EQUAL A32 
A32 -> VARG SEMICOLON 
A41 -> OP A42 
A42 -> EQUAL A43 
A43 -> VARG SEMICOLON 
A51 -> EQUAL A52 
A52 -> NULLS SEMICOLON 
A61 -> EQUAL A62 
A62 -> NULLS SEMICOLON 
A71 -> EQUAL A72 
A72 -> ARRAY SEMICOLON 
A81 -> EQUAL A82 
A82 -> ARRAY SEMICOLON 
A91 -> EQUAL A92 
A92 -> OBJECT SEMICOLON 
B11 -> EQUAL B12 
B12 -> OBJECT SEMICOLON 
B21 -> EQUAL B22 
B22 -> STRING SEMICOLON 
B31 -> EQUAL B32 
B32 -> STRING SEMICOLON 
B41 -> EQUAL B42 
B42 -> BOOLEAN SEMICOLON 
B51 -> EQUAL B52 
B52 -> BOOLEAN SEMICOLON 
B61 -> INCREMENT SEMICOLON 
B71 -> DECREMENT SEMICOLON 
ALPHABET -> a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z 
NUMBER -> 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9 
OTHER -> $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | } 
SYNTAX -> null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
VAR_FIRST -> a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
ALPHANUM -> ALPHANUM ALPHANUM  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
VAR -> VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
VARIABLES -> VARS VAR  | LETS VAR  | CONSTS VAR 
NUMBERS -> NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9 
STRING_WORD -> STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
VALUE -> NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR L11  | VAR L21  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null 
B81 -> OP VARG 
B91 -> VARG RBC 
VARG -> VARG C11  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR L11  | VAR L21  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
C11 -> COMMA VARG 
BOOLEAN -> BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR L11  | VAR L21 
C21 -> ANDS BOOLEAN 
C31 -> ORS BOOLEAN 
C41 -> RELATION VARG 
C51 -> BOOLEAN RBC 
OP -> +  | -  | *  | /  | **  | % 
EXPRESSION -> BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR L11  | VAR L21  | RBO C61 
C61 -> BOOLEAN RBC 
RELATION -> GREAT EQUAL  | LESS EQUAL  | EQUAL EQUAL  | EQUAL C71  | SERU EQUAL  | <  | >  | in 
C71 -> EQUAL EQUAL 
STRING -> STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11 
C81 -> STRING_WORD PETIK2 
C91 -> STRING_WORD PETIK1 
D11 -> STRING_WORD GRAVE 
ARRAY -> SBO D21  | SBO SBC 
D21 -> VARG SBC 
OBJECT -> CBO CBC  | CBO D31 
D31 -> OBJECT_CONTENT CBC 
OBJECT_CONTENT -> VARG D41  | OBJECT_CONTENT D51  | VARG C11  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR L11  | VAR L21  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
D41 -> COLON VARG 
D51 -> COMMA OBJECT_CONTENT 
COMMENT_WORD -> COMMENT_WORD COMMENT_WORD  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
COMMENT -> DIVIDEMUL D61  | DIVIDE D71 
D61 -> COMMENT_WORD MULDIVIDE 
D71 -> DIVIDE COMMENT_WORD 
IF_HEADER -> IFS D81 
D81 -> RBO D82 
D82 -> BOOLEAN RBC 
IFELSE -> IF ELSEIF  | IF ELSE  | IF D91  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71 
D91 -> ELSEIF ELSE 
IF -> IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71 
E11 -> CBO E12 
E12 -> SS CBC 
E21 -> CBO E22 
E22 -> BREAKS E23 
E23 -> SEMICOLON CBC 
E31 -> CBO E32 
E32 -> CONTINUES E33 
E33 -> SEMICOLON CBC 
E41 -> CBO E42 
E42 -> BREAKS E43 
E43 -> SEMICOLON E44 
E44 -> SS CBC 
E51 -> CBO E52 
E52 -> CONTINUES E53 
E53 -> SEMICOLON E54 
E54 -> SS CBC 
E61 -> CBO E62 
E62 -> SS E63 
E63 -> BREAKS E64 
E64 -> SEMICOLON CBC 
E71 -> CBO E72 
E72 -> SS E73 
E73 -> CONTINUES E74 
E74 -> SEMICOLON CBC 
ELSEIF_HEADER -> ELSEIFS E81 
E81 -> RBO E82 
E82 -> BOOLEAN RBC 
ELSEIF -> ELSEIF_HEADER E91  | ELSEIF_HEADER F11  | ELSEIF_HEADER F21  | ELSEIF_HEADER F31  | ELSEIF_HEADER F41  | ELSEIF_HEADER F51  | ELSEIF_HEADER F61  | ELSEIF_HEADER F71 
E91 -> CBO E92 
E92 -> SS CBC 
F11 -> CBO F12 
F12 -> BREAKS F13 
F13 -> SEMICOLON CBC 
F21 -> CBO F22 
F22 -> CONTINUES F23 
F23 -> SEMICOLON CBC 
F31 -> CBO F32 
F32 -> CONTINUES F33 
F33 -> SEMICOLON CBC 
F41 -> CBO F42 
F42 -> BREAKS F43 
F43 -> SEMICOLON F44 
F44 -> SS CBC 
F51 -> CBO F52 
F52 -> CONTINUES F53 
F53 -> SEMICOLON F54 
F54 -> SS CBC 
F61 -> CBO F62 
F62 -> SS F63 
F63 -> BREAKS F64 
F64 -> SEMICOLON CBC 
F71 -> CBO F72 
F72 -> SS F73 
F73 -> CONTINUES F74 
F74 -> SEMICOLON CBC 
ELSE -> ELSES F81  | ELSES F91  | ELSES G11  | ELSES G21  | ELSES G31  | ELSES G41  | ELSES G51 
F81 -> CBO F82 
F82 -> SS CBC 
F91 -> CBO F92 
F92 -> BREAKS F93 
F93 -> SEMICOLON CBC 
G11 -> CBO G12 
G12 -> CONTINUES G13 
G13 -> SEMICOLON CBC 
G21 -> CBO G22 
G22 -> BREAKS G23 
G23 -> SEMICOLON G24 
G24 -> SS CBC 
G31 -> CBO G32 
G32 -> CONTINUES G33 
G33 -> SEMICOLON G34 
G34 -> SS CBC 
G41 -> CBO G42 
G42 -> SS G43 
G43 -> BREAKS G44 
G44 -> SEMICOLON CBC 
G51 -> CBO G52 
G52 -> SS G53 
G53 -> CONTINUES G54 
G54 -> SEMICOLON CBC 
WHILE_HEADER -> WHILES G61 
G61 -> RBO G62 
G62 -> BOOLEAN RBC 
WHILE -> WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41 
G71 -> CBO G72 
G72 -> SS CBC 
G81 -> CBO G82 
G82 -> SS G83 
G83 -> BREAKS G84 
G84 -> SEMICOLON CBC 
G91 -> CBO G92 
G92 -> BREAKS G93 
G93 -> SEMICOLON G94 
G94 -> SS CBC 
H11 -> CBO H12 
H12 -> BREAKS H13 
H13 -> SEMICOLON CBC 
H21 -> CBO H22 
H22 -> SS H23 
H23 -> CONTINUES CBC 
H31 -> CBO H32 
H32 -> CONTINUES H33 
H33 -> SS CBC 
H41 -> CBO H42 
H42 -> CONTINUES H43 
H43 -> SEMICOLON CBC 
FOR_STEPS -> PLUS PLUS  | MIN MIN  | OP H51 
H51 -> EQUAL VARG 
FOR_EXPRESSION -> RBO H61 
H61 -> VARIABLES H62 
H62 -> EQUAL H63 
H63 -> VARG H64 
H64 -> SEMICOLON H65 
H65 -> VAR H66 
H66 -> RELATION H67 
H67 -> VARG H68 
H68 -> SEMICOLON H69 
H69 -> VAR H610 
H610 -> FOR_STEPS RBC 
FOR_HEADER -> FORS FOR_EXPRESSION 
FOR -> FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41 
H71 -> CBO H72 
H72 -> SS CBC 
H81 -> CBO H82 
H82 -> SS H83 
H83 -> BREAKS H84 
H84 -> SEMICOLON CBC 
H91 -> CBO H92 
H92 -> BREAKS H93 
H93 -> SEMICOLON H94 
H94 -> SS CBC 
I11 -> CBO I12 
I12 -> BREAKS I13 
I13 -> SEMICOLON CBC 
I21 -> CBO I22 
I22 -> SS I23 
I23 -> CONTINUES I24 
I24 -> SEMICOLON CBC 
I31 -> CBO I32 
I32 -> CONTINUES I33 
I33 -> SEMICOLON I34 
I34 -> SS CBC 
I41 -> CBO I42 
I42 -> CONTINUES I43 
I43 -> SEMICOLON CBC 
DOWHILE -> DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21 
I51 -> CBO I52 
I52 -> SS I53 
I53 -> CBC I54 
I54 -> WHILE_HEADER SEMICOLON 
I61 -> CBO I62 
I62 -> SS I63 
I63 -> BREAKS I64 
I64 -> SEMICOLON I65 
I65 -> CBC I66 
I66 -> WHILE_HEADER SEMICOLON 
I71 -> CBO I72 
I72 -> BREAKS I73 
I73 -> SEMICOLON I74 
I74 -> SS I75 
I75 -> CBC I76 
I76 -> WHILE_HEADER SEMICOLON 
I81 -> CBO I82 
I82 -> BREAKS I83 
I83 -> SEMICOLON I84 
I84 -> CBC I85 
I85 -> WHILE_HEADER SEMICOLON 
I91 -> CBO I92 
I92 -> SS I93 
I93 -> CONTINUES I94 
I94 -> SEMICOLON I95 
I95 -> CBC I96 
I96 -> WHILE_HEADER SEMICOLON 
J11 -> CBO J12 
J12 -> CONTINUES J13 
J13 -> SEMICOLON J14 
J14 -> SS J15 
J15 -> CBC J16 
J16 -> WHILE_HEADER SEMICOLON 
J21 -> CBO J22 
J22 -> CONTINUES J23 
J23 -> SEMICOLON J24 
J24 -> CBC J25 
J25 -> WHILE_HEADER J26 
J26 -> SEMICOLON  
FORIN_EXPRESSION -> RBO J31 
J31 -> VARIABLES J32 
J32 -> INS J33 
J33 -> VARG RBC 
FORIN_HEADER -> FORS FORIN_EXPRESSION 
FORIN -> FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91  | FORIN_HEADER K11 
J41 -> CBO J42 
J42 -> SS CBC 
J51 -> CBO J52 
J52 -> SS J53 
J53 -> BREAKS J54 
J54 -> SEMICOLON CBC 
J61 -> CBO J62 
J62 -> BREAKS J63 
J63 -> SEMICOLON J64 
J64 -> SS CBC 
J71 -> CBO J72 
J72 -> BREAKS J73 
J73 -> SEMICOLON CBC 
J81 -> CBO J82 
J82 -> SS J83 
J83 -> CONTINUES J84 
J84 -> SEMICOLON CBC 
J91 -> CBO J92 
J92 -> CONTINUES J93 
J93 -> SEMICOLON J94 
J94 -> SS CBC 
K11 -> CBO K12 
K12 -> CONTINUES K13 
K13 -> SEMICOLON CBC 
FOROF_EXPRESSION -> RBO K21 
K21 -> VARIABLES K22 
K22 -> INS K23 
K23 -> VARG RBC 
FOROF_HEADER -> FORS FOROF_EXPRESSION 
FOROF -> FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81  | FOROF_HEADER K91 
K31 -> CBO K32 
K32 -> SS CBC 
K41 -> CBO K42 
K42 -> SS K43 
K43 -> BREAKS K44 
K44 -> SEMICOLON CBC 
K51 -> CBO K52 
K52 -> BREAKS K53 
K53 -> SEMICOLON K54 
K54 -> SS CBC 
K61 -> CBO K62 
K62 -> BREAKS K63 
K63 -> SEMICOLON CBC 
K71 -> CBO K72 
K72 -> SS K73 
K73 -> CONTINUES K74 
K74 -> SEMICOLON CBC 
K81 -> CBO K82 
K82 -> CONTINUES K83 
K83 -> SEMICOLON K84 
K84 -> SS CBC 
K91 -> CBO K92 
K92 -> CONTINUES K93 
K93 -> SEMICOLON CBC 
FUNCTION_NAME -> VAR L11  | VAR L21 
L11 -> RBO L12 
L12 -> VARG RBC 
L21 -> RBO RBC 
FUNCTION_HEADER -> FUNCTIONS FUNCTION_NAME 
FUNCTION_S -> FUNCTION_S FUNCTION_S  | FUNC_BODY FUNC_BODY  | IF_HEADER N51  | IF ELSEIF  | IF ELSE  | IF D91  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | FOR_HEADER N81  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | WHILE_HEADER N91  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARIABLES L31  | VARIABLES L41  | VAR L51  | VAR L61  | VARIABLES L71  | VAR L81  | VARIABLES L91  | VAR M11  | VARIABLES M21  | VAR M31  | VARIABLES M41  | VAR M51  | VARIABLES M61  | VAR M71  | VAR M81  | VAR M91  | VARIABLES SEMICOLON  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q41  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | THROWS Q51  | THROWS Q61  | THROWS Q71 
FUNC_BODY -> FUNC_BODY FUNC_BODY  | IF_HEADER N51  | IF ELSEIF  | IF ELSE  | IF D91  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | FOR_HEADER N81  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | WHILE_HEADER N91  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARIABLES L31  | VARIABLES L41  | VAR L51  | VAR L61  | VARIABLES L71  | VAR L81  | VARIABLES L91  | VAR M11  | VARIABLES M21  | VAR M31  | VARIABLES M41  | VAR M51  | VARIABLES M61  | VAR M71  | VAR M81  | VAR M91  | VARIABLES SEMICOLON  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q41  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | THROWS Q51  | THROWS Q61  | THROWS Q71 
L31 -> EQUAL L32 
L32 -> VARG SEMICOLON 
L41 -> OP L42 
L42 -> EQUAL L43 
L43 -> VARG SEMICOLON 
L51 -> EQUAL L52 
L52 -> VARG SEMICOLON 
L61 -> OP L62 
L62 -> EQUAL L63 
L63 -> VARG SEMICOLON 
L71 -> EQUAL L72 
L72 -> NULLS SEMICOLON 
L81 -> EQUAL L82 
L82 -> NULLS SEMICOLON 
L91 -> EQUAL L92 
L92 -> ARRAY SEMICOLON 
M11 -> EQUAL M12 
M12 -> ARRAY SEMICOLON 
M21 -> EQUAL M22 
M22 -> OBJECT SEMICOLON 
M31 -> EQUAL M32 
M32 -> OBJECT SEMICOLON 
M41 -> EQUAL M42 
M42 -> STRING SEMICOLON 
M51 -> EQUAL M52 
M52 -> STRING SEMICOLON 
M61 -> EQUAL M62 
M62 -> BOOLEAN SEMICOLON 
M71 -> EQUAL M72 
M72 -> BOOLEAN SEMICOLON 
M81 -> INCREMENT SEMICOLON 
M91 -> DECREMENT SEMICOLON 
FUNCTION -> FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON 
N11 -> CBO N12 
N12 -> FUNCTION_S CBC 
N21 -> CBO N22 
N22 -> FUNC_BODY CBC 
RETURN -> RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON 
N31 -> BOOLEAN SEMICOLON 
N41 -> VARG SEMICOLON 
IF_FUNC -> IF_HEADER N51 
N51 -> CBO N52 
N52 -> FUNC_BODY CBC 
ELSEIF_FUNC -> ELSEIF_HEADER N61 
N61 -> CBO N62 
N62 -> FUNC_BODY CBC 
ELSE_FUNC -> ELSES N71 
N71 -> CBO N72 
N72 -> FUNC_BODY CBC 
FOR_FUNC -> FOR_HEADER N81 
N81 -> CBO N82 
N82 -> FUNC_BODY CBC 
WHILE_FUNC -> WHILE_HEADER N91 
N91 -> CBO N92 
N92 -> FUNC_BODY CBC 
DOWHILE_FUNC -> DOWHILE O11 
O11 -> CBO O12 
O12 -> FUNC_BODY CBC 
TRYCATCH_S -> TRYCATCH_S TRYCATCH_S  | IF_HEADER N51  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | FOR_HEADER N81  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | WHILE_HEADER N91  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARIABLES O21  | VARIABLES O31  | VAR O41  | VAR O51  | VARIABLES O61  | VAR O71  | VARIABLES O81  | VAR O91  | VARIABLES P11  | VAR P21  | VARIABLES P31  | VAR P41  | VARIABLES P51  | VAR P61  | VAR P71  | VAR P81  | VARIABLES SEMICOLON  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q41  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | THROWS Q51  | THROWS Q61  | THROWS Q71 
O21 -> EQUAL O22 
O22 -> VARG SEMICOLON 
O31 -> OP O32 
O32 -> EQUAL O33 
O33 -> VARG SEMICOLON 
O41 -> EQUAL O42 
O42 -> VARG SEMICOLON 
O51 -> OP O52 
O52 -> EQUAL O53 
O53 -> VARG SEMICOLON 
O61 -> EQUAL O62 
O62 -> NULLS SEMICOLON 
O71 -> EQUAL O72 
O72 -> NULLS SEMICOLON 
O81 -> EQUAL O82 
O82 -> ARRAY SEMICOLON 
O91 -> EQUAL O92 
O92 -> ARRAY SEMICOLON 
P11 -> EQUAL P12 
P12 -> OBJECT SEMICOLON 
P21 -> EQUAL P22 
P22 -> OBJECT SEMICOLON 
P31 -> EQUAL P32 
P32 -> STRING SEMICOLON 
P41 -> EQUAL P42 
P42 -> STRING SEMICOLON 
P51 -> EQUAL P52 
P52 -> BOOLEAN SEMICOLON 
P61 -> EQUAL P62 
P62 -> BOOLEAN SEMICOLON 
P71 -> INCREMENT SEMICOLON 
P81 -> DECREMENT SEMICOLON 
TRY -> TRYS P91 
P91 -> CBO P92 
P92 -> TRYCATCH_S CBC 
CATCH_HEADER -> RBO Q11 
Q11 -> VARG RBC 
CATCH -> CATCHES Q21 
Q21 -> CATCH_HEADER Q22 
Q22 -> CBO Q23 
Q23 -> TRYCATCH_S CBC 
FINALLY -> FINALLYS Q31 
Q31 -> CBO Q32 
Q32 -> TRYCATCH_S CBC 
TRYCATCH -> TRY CATCH  | TRY FINALLY  | TRY Q41 
Q41 -> CATCH FINALLY 
THROW -> THROWS Q51  | THROWS Q61  | THROWS Q71 
Q51 -> EXPRESSION SEMICOLON 
Q61 -> STRING SEMICOLON 
Q71 -> RBO Q72 
Q72 -> STRING Q73 
Q73 -> RBC SEMICOLON 
SWITCHCASE_S -> TRYCATCH_S TRYCATCH_S  | IF_HEADER N51  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | FOR_HEADER N81  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | WHILE_HEADER N91  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | DOS J21  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARIABLES O21  | VARIABLES O31  | VAR O41  | VAR O51  | VARIABLES O61  | VAR O71  | VARIABLES O81  | VAR O91  | VARIABLES P11  | VAR P21  | VARIABLES P31  | VAR P41  | VARIABLES P51  | VAR P61  | VAR P71  | VAR P81  | VARIABLES SEMICOLON  | RETURNS N31  | RETURNS N41  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q41  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21  | THROWS Q51  | THROWS Q61  | THROWS Q71 
SWITCH_HEADER -> RBO Q81 
Q81 -> BOOLEAN RBC 
SWITCH -> SWITCHES SWITCH_HEADER 
CASE_HEADER -> CASES Q91 
Q91 -> VALUE COLON 
CASE -> CASE_HEADER SWITCHCASE_S  | CASE_HEADER R11  | CASE CASE  | CASE R21  | CASES Q91 
R11 -> SWITCHCASE_S SWITCHCASE_S 
R21 -> BREAKS SEMICOLON 
DEFAULT -> DEFAULTS R31  | DEFAULTS R41  | DEFAULTS R51  | DEFAULTS R61 
R31 -> COLON R32 
R32 -> BREAKS SEMICOLON 
R41 -> COLON SWITCHCASE_S 
R51 -> COLON R52 
R52 -> SWITCHCASE_S R53 
R53 -> BREAKS SEMICOLON 
R61 -> COLON R62 
R62 -> BREAKS R63 
R63 -> SEMICOLON R64 
R64 -> SWITCHCASE_S  
SWITCHCASE -> SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | SWITCH S21 
R71 -> CBO R72 
R72 -> CASE CBC 
R81 -> CBO R82 
R82 -> CASE R83 
R83 -> DEFAULT CBC 
R91 -> CBO R92 
R92 -> DEFAULT CBC 
S11 -> CBO S12 
S12 -> DEFAULT S13 
S13 -> CASE CBC 
S21 -> CBO CBC 
DELETE -> DELETES S31  | DELETES S41  | DELETES S51 
S31 -> VAR S32 
S32 -> PERIOD S33 
S33 -> VAR SEMICOLON 
S41 -> VAR S42 
S42 -> SBO S43 
S43 -> VAR S44 
S44 -> SBC SEMICOLON 
S51 -> VAR SEMICOLON 
CLASS_HEADER -> CLASSS VAR  | CLASSS S61 
S61 -> VAR S62 
S62 -> EXTENDS S63 
S63 -> VAR  
CLASS_S -> CLASS_S CLASS_S  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | IF_HEADER E71  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | WHILE_HEADER H41  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FOR_HEADER I41  | CLASS_HEADER U51  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | VARIABLES S71  | VARIABLES S81  | VAR S91  | VAR T11  | VARIABLES T21  | VAR T31  | VARIABLES T41  | VAR T51  | VARIABLES T61  | VAR T71  | VARIABLES T81  | VAR T91  | VARIABLES U11  | VAR U21  | VAR U31  | VAR U41  | VARIABLES SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71 
S71 -> EQUAL S72 
S72 -> VARG SEMICOLON 
S81 -> OP S82 
S82 -> EQUAL S83 
S83 -> VARG SEMICOLON 
S91 -> EQUAL S92 
S92 -> VARG SEMICOLON 
T11 -> OP T12 
T12 -> EQUAL T13 
T13 -> VARG SEMICOLON 
T21 -> EQUAL T22 
T22 -> NULLS SEMICOLON 
T31 -> EQUAL T32 
T32 -> NULLS SEMICOLON 
T41 -> EQUAL T42 
T42 -> ARRAY SEMICOLON 
T51 -> EQUAL T52 
T52 -> ARRAY SEMICOLON 
T61 -> EQUAL T62 
T62 -> OBJECT SEMICOLON 
T71 -> EQUAL T72 
T72 -> OBJECT SEMICOLON 
T81 -> EQUAL T82 
T82 -> STRING SEMICOLON 
T91 -> EQUAL T92 
T92 -> STRING SEMICOLON 
U11 -> EQUAL U12 
U12 -> BOOLEAN SEMICOLON 
U21 -> EQUAL U22 
U22 -> BOOLEAN SEMICOLON 
U31 -> INCREMENT SEMICOLON 
U41 -> DECREMENT SEMICOLON 
CLASS -> CLASS_HEADER U51 
U51 -> CBO U52 
U52 -> CLASS_S CBC 
IMPORT -> IMPORTS U61  | IMPORTS U71 
U61 -> IMPORT_S U62 
U62 -> FROMS U63 
U63 -> STRING SEMICOLON 
U71 -> STRING SEMICOLON 
IMPORT_S -> VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | MUL U81  | CBO CBC  | CBO D31 
U81 -> ASS VAR 
EXPORT -> EXPORTS U91  | EXPORTS V11  | EXPORTS V21 
U91 -> DEFAULTS U92 
U92 -> EXPORT_S SEMICOLON 
V11 -> EXPORT_S SEMICOLON 
V21 -> EXPORT_S2 V22 
V22 -> FROMS V23 
V23 -> STRING SEMICOLON 
EXPORT_S -> VARS VAR  | LETS VAR  | CONSTS VAR  | VARIABLES V31  | FUNCTION_HEADER N11  | FUNCTION_HEADER N21  | FUNCTION_NAME SEMICOLON  | CLASSS VAR  | CLASSS S61  | CBO CBC  | CBO D31 
V31 -> EQUAL VAR 
EXPORT_S2 -> MUL V41  | *  | CBO CBC  | CBO D31 
V41 -> ASS VAR 
SERU -> ! 
DIVIDE -> / 
HASHTAG -> # 
PERSEN -> % 
RBO -> ( 
RBC -> ) 
SBO -> [ 
SBC -> ] 
CBO -> { 
CBC -> } 
MUL -> * 
POW -> ** 
PLUS -> + 
INCREMENT -> PLUS PLUS 
MIN -> - 
DECREMENT -> MIN MIN 
COMMA -> , 
PERIOD -> . 
COLON -> : 
SEMICOLON -> ; 
LESS -> < 
EQUAL -> = 
GREAT -> > 
UNDERSCORE -> _ 
PETIK1 -> ' 
PETIK2 -> " 
GRAVE -> ` 
NULLS -> null 
ANDS -> & & 
ORS -> or 
INS -> in 
TRUES -> true 
FALSES -> false 
FORS -> for 
IFS -> if 
ELSEIFS -> ELSES IFS 
ELSES -> else 
BREAKS -> break 
CONTINUES -> continue 
WHILES -> while 
DOS -> do 
FUNCTIONS -> function 
RETURNS -> return 
CLASSS -> class 
EXTENDS -> extends 
TRYS -> try 
THROWS -> throw 
CATCHES -> catch 
FINALLYS -> finally 
FROMS -> from 
IMPORTS -> import 
EXPORTS -> export 
ASS -> as 
SWITCHES -> switch 
CASES -> case 
VARS -> var 
LETS -> let 
CONSTS -> const 
DEFAULTS -> default 
DELETES -> delete 
DIVIDEMUL -> DIVIDE MUL 
MULDIVIDE -> MUL DIVIDE 
