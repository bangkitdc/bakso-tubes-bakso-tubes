S0 -> SS SS  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FORIN_HEADER J31  | FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91  | FOROF_HEADER K21  | FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | IMPORTS U51  | IMPORTS U61  | EXPORTS U81  | EXPORTS U91  | EXPORTS V11  | DIVIDEMUL D61  | DIVIDE D71  | VARIABLES A11  | VARIABLES A21  | VAR A31  | VAR A41  | VARIABLES A51  | VAR A61  | VARIABLES A71  | VAR A81  | VARIABLES A91  | VAR B11  | VARIABLES B21  | VAR B31  | VARIABLES B41  | VAR B51  | VAR B61  | VAR B71  | VARIABLES SEMICOLON  | TRY CATCH  | TRY FINALLY  | TRY Q31  | THROWS Q41  | THROWS Q51  | THROWS Q61  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | DELETES S21  | DELETES S31  | DELETES S41  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON 
SS -> SS SS  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | FORIN_HEADER J31  | FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91  | FOROF_HEADER K21  | FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | IMPORTS U51  | IMPORTS U61  | EXPORTS U81  | EXPORTS U91  | EXPORTS V11  | DIVIDEMUL D61  | DIVIDE D71  | VARIABLES A11  | VARIABLES A21  | VAR A31  | VAR A41  | VARIABLES A51  | VAR A61  | VARIABLES A71  | VAR A81  | VARIABLES A91  | VAR B11  | VARIABLES B21  | VAR B31  | VARIABLES B41  | VAR B51  | VAR B61  | VAR B71  | VARIABLES SEMICOLON  | TRY CATCH  | TRY FINALLY  | TRY Q31  | THROWS Q41  | THROWS Q51  | THROWS Q61  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | DELETES S21  | DELETES S31  | DELETES S41  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON 
A11 -> EQUAL A12 
A12 -> VARG SEMICOLON 
A21 -> OP A22 
A22 -> EQUAL A23 
A23 -> VARG SEMICOLON 
A31 -> EQUAL A32 
A32 -> VARG SEMICOLON 
A41 -> OP A42 
A42 -> EQUAL A43 
A43 -> VARG SEMICOLON 
A51 -> EQUAL A52 
A52 -> NULLS SEMICOLON 
A61 -> EQUAL A62 
A62 -> NULLS SEMICOLON 
A71 -> EQUAL A72 
A72 -> ARRAY SEMICOLON 
A81 -> EQUAL A82 
A82 -> ARRAY SEMICOLON 
A91 -> EQUAL A92 
A92 -> OBJECT SEMICOLON 
B11 -> EQUAL B12 
B12 -> OBJECT SEMICOLON 
B21 -> EQUAL B22 
B22 -> STRING SEMICOLON 
B31 -> EQUAL B32 
B32 -> STRING SEMICOLON 
B41 -> EQUAL B42 
B42 -> BOOLEAN SEMICOLON 
B51 -> EQUAL B52 
B52 -> BOOLEAN SEMICOLON 
B61 -> INCREMENT SEMICOLON 
B71 -> DECREMENT SEMICOLON 
ALPHABET -> a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z 
NUMBER -> 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9 
OTHER -> $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | } 
SYNTAX -> null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
VAR_FIRST -> a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
ALPHANUM -> ALPHANUM ALPHANUM  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
VAR -> VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
VARIABLES -> VARS VAR  | LETS VAR  | CONSTS VAR 
NUMBERS -> NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9 
STRING_WORD -> STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
VALUE -> NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR K91  | VAR L11  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null 
B81 -> OP VARG 
B91 -> VARG RBC 
VARG -> VARG C11  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR K91  | VAR L11  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
C11 -> COMMA VARG 
BOOLEAN -> BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR K91  | VAR L11 
C21 -> ANDS BOOLEAN 
C31 -> ORS BOOLEAN 
C41 -> RELATION VARG 
C51 -> BOOLEAN RBC 
OP -> +  | -  | *  | /  | **  | % 
EXPRESSION -> BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR K91  | VAR L11  | RBO C61 
C61 -> BOOLEAN RBC 
RELATION -> GREAT EQUAL  | LESS EQUAL  | EQUAL EQUAL  | EQUAL C71  | SERU EQUAL  | <  | >  | in 
C71 -> EQUAL EQUAL 
STRING -> STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11 
C81 -> STRING_WORD PETIK2 
C91 -> STRING_WORD PETIK1 
D11 -> STRING_WORD GRAVE 
ARRAY -> SBO D21  | SBO SBC 
D21 -> VARG SBC 
OBJECT -> CBO CBC  | CBO D31 
D31 -> OBJECT_CONTENT CBC 
OBJECT_CONTENT -> VARG D41  | OBJECT_CONTENT D51  | VARG C11  | NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | BOOLEAN C21  | BOOLEAN C31  | SERU BOOLEAN  | VARG C41  | true  | false  | RBO C51  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ NUMBERS NUMBERS  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | VAR K91  | VAR L11  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | SBO D21  | SBO SBC  | CBO CBC  | CBO D31  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARG B81  | RBO B91  | null  | VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _ 
D41 -> COLON VARG 
D51 -> COMMA OBJECT_CONTENT 
COMMENT_WORD -> COMMENT_WORD COMMENT_WORD  | STRING STRING  | PETIK2 C81  | PETIK1 C91  | GRAVE D11  | STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete STRING_WORD STRING_WORD  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | 0  | 1  | 2  | 3  | 4  | 5  | 6  | 7  | 8  | 9  | $  | &  | .  | ?  | @  | \  | ^  | `  | ~  | !  | #  | %  | (  | )  | *  | +  | -  | ,  | /  | :  | <  | =  | >  | [  | ]  | _  | {  | }  | null  | & &  | or  | in  | true  | false  | !  | for  | if  | ELSES IFS  | else  | while  | do  | break  | continue  | function  | return  | try  | catch  | finally  | throw  | class  | from  | import  | export  | as  | switch  | case  | default  | var  | let  | const  | delete 
COMMENT -> DIVIDEMUL D61  | DIVIDE D71 
D61 -> COMMENT_WORD MULDIVIDE 
D71 -> DIVIDE COMMENT_WORD 
IF_HEADER -> IFS D81 
D81 -> RBO D82 
D82 -> BOOLEAN RBC 
IF -> IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61 
D91 -> CBO D92 
D92 -> SS CBC 
E11 -> CBO E12 
E12 -> BREAKS E13 
E13 -> SEMICOLON CBC 
E21 -> CBO E22 
E22 -> CONTINUES E23 
E23 -> SEMICOLON CBC 
E31 -> CBO E32 
E32 -> BREAKS E33 
E33 -> SEMICOLON E34 
E34 -> SS CBC 
E41 -> CBO E42 
E42 -> CONTINUES E43 
E43 -> SEMICOLON E44 
E44 -> SS CBC 
E51 -> CBO E52 
E52 -> SS E53 
E53 -> BREAKS E54 
E54 -> SEMICOLON CBC 
E61 -> CBO E62 
E62 -> SS E63 
E63 -> CONTINUES E64 
E64 -> SEMICOLON CBC 
ELSEIF_HEADER -> ELSEIFS E71 
E71 -> RBO E72 
E72 -> BOOLEAN RBC 
ELSEIF -> ELSEIF_HEADER E81  | ELSEIF ELSE  | ELSEIF_HEADER E91  | ELSEIF_HEADER F11  | ELSEIF_HEADER F21  | ELSEIF_HEADER F31  | ELSEIF_HEADER F41  | ELSEIF_HEADER F51  | ELSEIF_HEADER F61 
E81 -> CBO E82 
E82 -> SS CBC 
E91 -> CBO E92 
E92 -> BREAKS E93 
E93 -> SEMICOLON CBC 
F11 -> CBO F12 
F12 -> CONTINUES F13 
F13 -> SEMICOLON CBC 
F21 -> CBO F22 
F22 -> CONTINUES F23 
F23 -> SEMICOLON CBC 
F31 -> CBO F32 
F32 -> BREAKS F33 
F33 -> SEMICOLON F34 
F34 -> SS CBC 
F41 -> CBO F42 
F42 -> CONTINUES F43 
F43 -> SEMICOLON F44 
F44 -> SS CBC 
F51 -> CBO F52 
F52 -> SS F53 
F53 -> BREAKS F54 
F54 -> SEMICOLON CBC 
F61 -> CBO F62 
F62 -> SS F63 
F63 -> CONTINUES F64 
F64 -> SEMICOLON CBC 
ELSE -> ELSES F71  | ELSES F81  | ELSES F91  | ELSES G11  | ELSES G21  | ELSES G31  | ELSES G41 
F71 -> CBO F72 
F72 -> SS CBC 
F81 -> CBO F82 
F82 -> BREAKS F83 
F83 -> SEMICOLON CBC 
F91 -> CBO F92 
F92 -> CONTINUES F93 
F93 -> SEMICOLON CBC 
G11 -> CBO G12 
G12 -> BREAKS G13 
G13 -> SEMICOLON G14 
G14 -> SS CBC 
G21 -> CBO G22 
G22 -> CONTINUES G23 
G23 -> SEMICOLON G24 
G24 -> SS CBC 
G31 -> CBO G32 
G32 -> SS G33 
G33 -> BREAKS G34 
G34 -> SEMICOLON CBC 
G41 -> CBO G42 
G42 -> SS G43 
G43 -> CONTINUES G44 
G44 -> SEMICOLON CBC 
WHILE_HEADER -> WHILES G51 
G51 -> RBO G52 
G52 -> BOOLEAN RBC 
WHILE -> WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31 
G61 -> CBO G62 
G62 -> SS CBC 
G71 -> CBO G72 
G72 -> SS G73 
G73 -> BREAKS G74 
G74 -> SEMICOLON CBC 
G81 -> CBO G82 
G82 -> BREAKS G83 
G83 -> SEMICOLON G84 
G84 -> SS CBC 
G91 -> CBO G92 
G92 -> BREAKS G93 
G93 -> SEMICOLON CBC 
H11 -> CBO H12 
H12 -> SS H13 
H13 -> CONTINUES CBC 
H21 -> CBO H22 
H22 -> CONTINUES H23 
H23 -> SS CBC 
H31 -> CBO H32 
H32 -> CONTINUES H33 
H33 -> SEMICOLON CBC 
FOR_STEPS -> PLUS PLUS  | MIN MIN  | OP H41 
H41 -> EQUAL VARG 
FOR_EXPRESSION -> RBO H51 
H51 -> VARIABLES H52 
H52 -> EQUAL H53 
H53 -> VARG H54 
H54 -> SEMICOLON H55 
H55 -> VAR H56 
H56 -> RELATION H57 
H57 -> VARG H58 
H58 -> SEMICOLON H59 
H59 -> VAR H510 
H510 -> FOR_STEPS RBC 
FOR_HEADER -> FORS FOR_EXPRESSION 
FOR -> FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31 
H61 -> CBO H62 
H62 -> SS CBC 
H71 -> CBO H72 
H72 -> SS H73 
H73 -> BREAKS H74 
H74 -> SEMICOLON CBC 
H81 -> CBO H82 
H82 -> BREAKS H83 
H83 -> SEMICOLON H84 
H84 -> SS CBC 
H91 -> CBO H92 
H92 -> BREAKS H93 
H93 -> SEMICOLON CBC 
I11 -> CBO I12 
I12 -> SS I13 
I13 -> CONTINUES I14 
I14 -> SEMICOLON CBC 
I21 -> CBO I22 
I22 -> CONTINUES I23 
I23 -> SEMICOLON I24 
I24 -> SS CBC 
I31 -> CBO I32 
I32 -> CONTINUES I33 
I33 -> SEMICOLON CBC 
DOWHILE -> DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11 
I41 -> CBO I42 
I42 -> SS I43 
I43 -> CBC I44 
I44 -> WHILE_HEADER SEMICOLON 
I51 -> CBO I52 
I52 -> SS I53 
I53 -> BREAKS I54 
I54 -> SEMICOLON I55 
I55 -> CBC I56 
I56 -> WHILE_HEADER SEMICOLON 
I61 -> CBO I62 
I62 -> BREAKS I63 
I63 -> SEMICOLON I64 
I64 -> SS I65 
I65 -> CBC I66 
I66 -> WHILE_HEADER SEMICOLON 
I71 -> CBO I72 
I72 -> BREAKS I73 
I73 -> SEMICOLON I74 
I74 -> CBC I75 
I75 -> WHILE_HEADER SEMICOLON 
I81 -> CBO I82 
I82 -> SS I83 
I83 -> CONTINUES I84 
I84 -> SEMICOLON I85 
I85 -> CBC I86 
I86 -> WHILE_HEADER SEMICOLON 
I91 -> CBO I92 
I92 -> CONTINUES I93 
I93 -> SEMICOLON I94 
I94 -> SS I95 
I95 -> CBC I96 
I96 -> WHILE_HEADER SEMICOLON 
J11 -> CBO J12 
J12 -> CONTINUES J13 
J13 -> SEMICOLON J14 
J14 -> CBC J15 
J15 -> WHILE_HEADER J16 
J16 -> SEMICOLON  
FORIN_EXPRESSION -> RBO J21 
J21 -> VARIABLES J22 
J22 -> INS J23 
J23 -> VARG RBC 
FORIN_HEADER -> FORS FORIN_EXPRESSION 
FORIN -> FORIN_HEADER J31  | FORIN_HEADER J41  | FORIN_HEADER J51  | FORIN_HEADER J61  | FORIN_HEADER J71  | FORIN_HEADER J81  | FORIN_HEADER J91 
J31 -> CBO J32 
J32 -> SS CBC 
J41 -> CBO J42 
J42 -> SS J43 
J43 -> BREAKS J44 
J44 -> SEMICOLON CBC 
J51 -> CBO J52 
J52 -> BREAKS J53 
J53 -> SEMICOLON J54 
J54 -> SS CBC 
J61 -> CBO J62 
J62 -> BREAKS J63 
J63 -> SEMICOLON CBC 
J71 -> CBO J72 
J72 -> SS J73 
J73 -> CONTINUES J74 
J74 -> SEMICOLON CBC 
J81 -> CBO J82 
J82 -> CONTINUES J83 
J83 -> SEMICOLON J84 
J84 -> SS CBC 
J91 -> CBO J92 
J92 -> CONTINUES J93 
J93 -> SEMICOLON CBC 
FOROF_EXPRESSION -> RBO K11 
K11 -> VARIABLES K12 
K12 -> INS K13 
K13 -> VARG RBC 
FOROF_HEADER -> FORS FOROF_EXPRESSION 
FOROF -> FOROF_HEADER K21  | FOROF_HEADER K31  | FOROF_HEADER K41  | FOROF_HEADER K51  | FOROF_HEADER K61  | FOROF_HEADER K71  | FOROF_HEADER K81 
K21 -> CBO K22 
K22 -> SS CBC 
K31 -> CBO K32 
K32 -> SS K33 
K33 -> BREAKS K34 
K34 -> SEMICOLON CBC 
K41 -> CBO K42 
K42 -> BREAKS K43 
K43 -> SEMICOLON K44 
K44 -> SS CBC 
K51 -> CBO K52 
K52 -> BREAKS K53 
K53 -> SEMICOLON CBC 
K61 -> CBO K62 
K62 -> SS K63 
K63 -> CONTINUES K64 
K64 -> SEMICOLON CBC 
K71 -> CBO K72 
K72 -> CONTINUES K73 
K73 -> SEMICOLON K74 
K74 -> SS CBC 
K81 -> CBO K82 
K82 -> CONTINUES K83 
K83 -> SEMICOLON CBC 
FUNCTION_NAME -> VAR K91  | VAR L11 
K91 -> RBO K92 
K92 -> VARG RBC 
L11 -> RBO RBC 
FUNCTION_HEADER -> FUNCTIONS FUNCTION_NAME 
FUNCTION_S -> FUNCTION_S FUNCTION_S  | FUNC_BODY FUNC_BODY  | IF_HEADER N41  | IF_FUNC ELSEIF_FUNC  | IF_FUNC ELSE_FUNC  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | FOR_HEADER N71  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | WHILE_HEADER N81  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARIABLES L21  | VARIABLES L31  | VAR L41  | VAR L51  | VARIABLES L61  | VAR L71  | VARIABLES L81  | VAR L91  | VARIABLES M11  | VAR M21  | VARIABLES M31  | VAR M41  | VARIABLES M51  | VAR M61  | VAR M71  | VAR M81  | VARIABLES SEMICOLON  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q31  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | THROWS Q41  | THROWS Q51  | THROWS Q61 
FUNC_BODY -> FUNC_BODY FUNC_BODY  | IF_HEADER N41  | IF_FUNC ELSEIF_FUNC  | IF_FUNC ELSE_FUNC  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | FOR_HEADER N71  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | WHILE_HEADER N81  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARIABLES L21  | VARIABLES L31  | VAR L41  | VAR L51  | VARIABLES L61  | VAR L71  | VARIABLES L81  | VAR L91  | VARIABLES M11  | VAR M21  | VARIABLES M31  | VAR M41  | VARIABLES M51  | VAR M61  | VAR M71  | VAR M81  | VARIABLES SEMICOLON  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q31  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | THROWS Q41  | THROWS Q51  | THROWS Q61 
L21 -> EQUAL L22 
L22 -> VARG SEMICOLON 
L31 -> OP L32 
L32 -> EQUAL L33 
L33 -> VARG SEMICOLON 
L41 -> EQUAL L42 
L42 -> VARG SEMICOLON 
L51 -> OP L52 
L52 -> EQUAL L53 
L53 -> VARG SEMICOLON 
L61 -> EQUAL L62 
L62 -> NULLS SEMICOLON 
L71 -> EQUAL L72 
L72 -> NULLS SEMICOLON 
L81 -> EQUAL L82 
L82 -> ARRAY SEMICOLON 
L91 -> EQUAL L92 
L92 -> ARRAY SEMICOLON 
M11 -> EQUAL M12 
M12 -> OBJECT SEMICOLON 
M21 -> EQUAL M22 
M22 -> OBJECT SEMICOLON 
M31 -> EQUAL M32 
M32 -> STRING SEMICOLON 
M41 -> EQUAL M42 
M42 -> STRING SEMICOLON 
M51 -> EQUAL M52 
M52 -> BOOLEAN SEMICOLON 
M61 -> EQUAL M62 
M62 -> BOOLEAN SEMICOLON 
M71 -> INCREMENT SEMICOLON 
M81 -> DECREMENT SEMICOLON 
FUNCTION -> FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON 
M91 -> CBO M92 
M92 -> FUNCTION_S CBC 
N11 -> CBO N12 
N12 -> FUNC_BODY CBC 
RETURN -> RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON 
N21 -> BOOLEAN SEMICOLON 
N31 -> VARG SEMICOLON 
IF_FUNC -> IF_HEADER N41  | IF_FUNC ELSEIF_FUNC  | IF_FUNC ELSE_FUNC 
N41 -> CBO N42 
N42 -> FUNC_BODY CBC 
ELSEIF_FUNC -> ELSEIF_HEADER N51  | ELSEIF_FUNC ELSEIF_FUNC  | ELSEIF_FUNC ELSE_FUNC 
N51 -> CBO N52 
N52 -> FUNC_BODY CBC 
ELSE_FUNC -> ELSES N61 
N61 -> CBO N62 
N62 -> FUNC_BODY CBC 
FOR_FUNC -> FOR_HEADER N71 
N71 -> CBO N72 
N72 -> FUNC_BODY CBC 
WHILE_FUNC -> WHILE_HEADER N81 
N81 -> CBO N82 
N82 -> FUNC_BODY CBC 
DOWHILE_FUNC -> DOWHILE N91 
N91 -> CBO N92 
N92 -> FUNC_BODY CBC 
TRYCATCH_S -> TRYCATCH_S TRYCATCH_S  | IF_HEADER N41  | IF_FUNC ELSEIF_FUNC  | IF_FUNC ELSE_FUNC  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | FOR_HEADER N71  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | WHILE_HEADER N81  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARIABLES O11  | VARIABLES O21  | VAR O31  | VAR O41  | VARIABLES O51  | VAR O61  | VARIABLES O71  | VAR O81  | VARIABLES O91  | VAR P11  | VARIABLES P21  | VAR P31  | VARIABLES P41  | VAR P51  | VAR P61  | VAR P71  | VARIABLES SEMICOLON  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q31  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | THROWS Q41  | THROWS Q51  | THROWS Q61 
O11 -> EQUAL O12 
O12 -> VARG SEMICOLON 
O21 -> OP O22 
O22 -> EQUAL O23 
O23 -> VARG SEMICOLON 
O31 -> EQUAL O32 
O32 -> VARG SEMICOLON 
O41 -> OP O42 
O42 -> EQUAL O43 
O43 -> VARG SEMICOLON 
O51 -> EQUAL O52 
O52 -> NULLS SEMICOLON 
O61 -> EQUAL O62 
O62 -> NULLS SEMICOLON 
O71 -> EQUAL O72 
O72 -> ARRAY SEMICOLON 
O81 -> EQUAL O82 
O82 -> ARRAY SEMICOLON 
O91 -> EQUAL O92 
O92 -> OBJECT SEMICOLON 
P11 -> EQUAL P12 
P12 -> OBJECT SEMICOLON 
P21 -> EQUAL P22 
P22 -> STRING SEMICOLON 
P31 -> EQUAL P32 
P32 -> STRING SEMICOLON 
P41 -> EQUAL P42 
P42 -> BOOLEAN SEMICOLON 
P51 -> EQUAL P52 
P52 -> BOOLEAN SEMICOLON 
P61 -> INCREMENT SEMICOLON 
P71 -> DECREMENT SEMICOLON 
TRY -> TRYS P81 
P81 -> CBO P82 
P82 -> TRYCATCH_S CBC 
CATCH_HEADER -> RBO P91 
P91 -> VARG RBC 
CATCH -> CATCHES Q11 
Q11 -> CATCH_HEADER Q12 
Q12 -> CBO Q13 
Q13 -> TRYCATCH_S CBC 
FINALLY -> FINALLYS Q21 
Q21 -> CBO Q22 
Q22 -> TRYCATCH_S CBC 
TRYCATCH -> TRY CATCH  | TRY FINALLY  | TRY Q31 
Q31 -> CATCH FINALLY 
THROW -> THROWS Q41  | THROWS Q51  | THROWS Q61 
Q41 -> EXPRESSION SEMICOLON 
Q51 -> STRING SEMICOLON 
Q61 -> RBO Q62 
Q62 -> STRING Q63 
Q63 -> RBC SEMICOLON 
SWITCHCASE_S -> TRYCATCH_S TRYCATCH_S  | IF_HEADER N41  | IF_FUNC ELSEIF_FUNC  | IF_FUNC ELSE_FUNC  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | FOR_HEADER N71  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | WHILE_HEADER N81  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | DOS I41  | DOS I51  | DOS I61  | DOS I71  | DOS I81  | DOS I91  | DOS J11  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARIABLES O11  | VARIABLES O21  | VAR O31  | VAR O41  | VARIABLES O51  | VAR O61  | VARIABLES O71  | VAR O81  | VARIABLES O91  | VAR P11  | VARIABLES P21  | VAR P31  | VARIABLES P41  | VAR P51  | VAR P61  | VAR P71  | VARIABLES SEMICOLON  | RETURNS N21  | RETURNS N31  | RETURNS SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71  | TRY CATCH  | TRY FINALLY  | TRY Q31  | SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11  | THROWS Q41  | THROWS Q51  | THROWS Q61 
SWITCH_HEADER -> RBO Q71 
Q71 -> BOOLEAN RBC 
SWITCH -> SWITCHES SWITCH_HEADER 
CASE_HEADER -> CASES Q81 
Q81 -> VALUE COLON 
CASE -> CASE_HEADER SWITCHCASE_S  | CASE_HEADER Q91  | CASE CASE  | CASE R11  | CASES Q81 
Q91 -> SWITCHCASE_S SWITCHCASE_S 
R11 -> BREAKS SEMICOLON 
DEFAULT -> DEFAULTS R21  | DEFAULTS R31  | DEFAULTS R41  | DEFAULTS R51 
R21 -> COLON R22 
R22 -> BREAKS SEMICOLON 
R31 -> COLON SWITCHCASE_S 
R41 -> COLON R42 
R42 -> SWITCHCASE_S R43 
R43 -> BREAKS SEMICOLON 
R51 -> COLON R52 
R52 -> BREAKS R53 
R53 -> SEMICOLON R54 
R54 -> SWITCHCASE_S  
SWITCHCASE -> SWITCH R61  | SWITCH R71  | SWITCH R81  | SWITCH R91  | SWITCH S11 
R61 -> CBO R62 
R62 -> CASE CBC 
R71 -> CBO R72 
R72 -> CASE R73 
R73 -> DEFAULT CBC 
R81 -> CBO R82 
R82 -> DEFAULT CBC 
R91 -> CBO R92 
R92 -> DEFAULT R93 
R93 -> CASE CBC 
S11 -> CBO CBC 
DELETE -> DELETES S21  | DELETES S31  | DELETES S41 
S21 -> VAR S22 
S22 -> PERIOD S23 
S23 -> VAR SEMICOLON 
S31 -> VAR S32 
S32 -> SBO S33 
S33 -> VAR S34 
S34 -> SBC SEMICOLON 
S41 -> VAR SEMICOLON 
CLASS_HEADER -> CLASSS VAR  | CLASSS S51 
S51 -> VAR S52 
S52 -> EXTENDS S53 
S53 -> VAR  
CLASS_S -> CLASS_S CLASS_S  | IF_HEADER D91  | IF ELIF  | IF ELSE  | IF_HEADER E11  | IF_HEADER E21  | IF_HEADER E31  | IF_HEADER E41  | IF_HEADER E51  | IF_HEADER E61  | WHILE_HEADER G61  | WHILE_HEADER G71  | WHILE_HEADER G81  | WHILE_HEADER G91  | WHILE_HEADER H11  | WHILE_HEADER H21  | WHILE_HEADER H31  | FOR_HEADER H61  | FOR_HEADER H71  | FOR_HEADER H81  | FOR_HEADER H91  | FOR_HEADER I11  | FOR_HEADER I21  | FOR_HEADER I31  | CLASS_HEADER U41  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | VARIABLES S61  | VARIABLES S71  | VAR S81  | VAR S91  | VARIABLES T11  | VAR T21  | VARIABLES T31  | VAR T41  | VARIABLES T51  | VAR T61  | VARIABLES T71  | VAR T81  | VARIABLES T91  | VAR U11  | VAR U21  | VAR U31  | VARIABLES SEMICOLON  | DIVIDEMUL D61  | DIVIDE D71 
S61 -> EQUAL S62 
S62 -> VARG SEMICOLON 
S71 -> OP S72 
S72 -> EQUAL S73 
S73 -> VARG SEMICOLON 
S81 -> EQUAL S82 
S82 -> VARG SEMICOLON 
S91 -> OP S92 
S92 -> EQUAL S93 
S93 -> VARG SEMICOLON 
T11 -> EQUAL T12 
T12 -> NULLS SEMICOLON 
T21 -> EQUAL T22 
T22 -> NULLS SEMICOLON 
T31 -> EQUAL T32 
T32 -> ARRAY SEMICOLON 
T41 -> EQUAL T42 
T42 -> ARRAY SEMICOLON 
T51 -> EQUAL T52 
T52 -> OBJECT SEMICOLON 
T61 -> EQUAL T62 
T62 -> OBJECT SEMICOLON 
T71 -> EQUAL T72 
T72 -> STRING SEMICOLON 
T81 -> EQUAL T82 
T82 -> STRING SEMICOLON 
T91 -> EQUAL T92 
T92 -> BOOLEAN SEMICOLON 
U11 -> EQUAL U12 
U12 -> BOOLEAN SEMICOLON 
U21 -> INCREMENT SEMICOLON 
U31 -> DECREMENT SEMICOLON 
CLASS -> CLASS_HEADER U41 
U41 -> CBO U42 
U42 -> CLASS_S CBC 
IMPORT -> IMPORTS U51  | IMPORTS U61 
U51 -> IMPORT_S U52 
U52 -> FROM U53 
U53 -> STRING SEMICOLON 
U61 -> STRING SEMICOLON 
IMPORT_S -> VAR_FIRST ALPHANUM  | a  | b  | c  | d  | e  | f  | g  | h  | i  | j  | k  | l  | m  | n  | o  | p  | q  | r  | s  | t  | u  | v  | w  | x  | y  | z  | A  | B  | C  | D  | E  | F  | G  | H  | I  | J  | K  | L  | M  | N  | O  | P  | Q  | R  | S  | T  | U  | V  | W  | X  | Y  | Z  | _  | MUL U71  | CBO CBC  | CBO D31 
U71 -> ASS VAR 
EXPORT -> EXPORTS U81  | EXPORTS U91  | EXPORTS V11 
U81 -> DEFAULTS U82 
U82 -> EXPORT_S SEMICOLON 
U91 -> EXPORT_S SEMICOLON 
V11 -> EXPORT_S2 V12 
V12 -> FROMS V13 
V13 -> STRING SEMICOLON 
EXPORT_S -> VARS VAR  | LETS VAR  | CONSTS VAR  | VARIABLES V21  | FUNCTION_HEADER M91  | FUNCTION_HEADER N11  | FUNCTION_NAME SEMICOLON  | CLASSS VAR  | CLASSS S51  | CBO CBC  | CBO D31 
V21 -> EQUAL VAR 
EXPORT_S2 -> MUL V31  | *  | CBO CBC  | CBO D31 
V31 -> ASS VAR 
SERU -> ! 
DIVIDE -> / 
HASHTAG -> # 
PERSEN -> % 
RBO -> ( 
RBC -> ) 
SBO -> [ 
SBC -> ] 
CBO -> { 
CBC -> } 
MUL -> * 
POW -> ** 
PLUS -> + 
INCREMENT -> PLUS PLUS 
MIN -> - 
DECREMENT -> MIN MIN 
COMMA -> , 
PERIOD -> . 
COLON -> : 
SEMICOLON -> ; 
LESS -> < 
EQUAL -> = 
GREAT -> > 
UNDERSCORE -> _ 
PETIK1 -> ' 
PETIK2 -> " 
GRAVE -> ` 
NULLS -> null 
ANDS -> & & 
ORS -> or 
INS -> in 
TRUES -> true 
FALSES -> false 
FORS -> for 
IFS -> if 
ELSEIFS -> ELSES IFS 
ELSES -> else 
BREAKS -> break 
CONTINUES -> continue 
WHILES -> while 
DOS -> do 
FUNCTIONS -> function 
RETURNS -> return 
CLASSS -> class 
EXTENDS -> extends 
TRYS -> try 
THROWS -> throw 
CATCHES -> catch 
FINALLYS -> finally 
FROMS -> from 
IMPORTS -> import 
EXPORTS -> export 
ASS -> as 
SWITCHES -> switch 
CASES -> case 
VARS -> var 
LETS -> let 
CONSTS -> const 
DEFAULTS -> default 
DELETES -> delete 
DIVIDEMUL -> DIVIDE MUL 
MULDIVIDE -> MUL DIVIDE 
